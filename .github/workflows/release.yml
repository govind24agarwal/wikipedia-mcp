name: Release Wikipedia MCP

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version'
        required: true
        default: '1.5.1'
      is_prerelease:
        description: 'Is this a pre-release?'
        type: boolean
        required: true
        default: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine wheel
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Update version in pyproject.toml
        run: |
          sed -i "s/version = \"[0-9]*\\.[0-9]*\\.[0-9]*\"/version = \"${{ github.event.inputs.version }}\"/g" pyproject.toml
          cat pyproject.toml

      - name: Build package
        run: |
          python -m build

      - name: Check package
        run: |
          twine check dist/*

      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  create-release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Update version in pyproject.toml
        run: |
          sed -i "s/version = \"[0-9]*\\.[0-9]*\\.[0-9]*\"/version = \"${{ github.event.inputs.version }}\"/g" pyproject.toml

      - name: Create release tag
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add pyproject.toml
          git commit --allow-empty -m "Bump version to ${{ github.event.inputs.version }}"
          git tag -f -a v${{ github.event.inputs.version }} -m "Version ${{ github.event.inputs.version }}"
          git push origin v${{ github.event.inputs.version }} --force
          git push origin main

      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ github.event.inputs.version }}
          name: Wikipedia MCP v${{ github.event.inputs.version }}
          body_path: CHANGELOG.md
          draft: false
          prerelease: ${{ github.event.inputs.is_prerelease }}
          files: |
            dist/*.tar.gz
            dist/*.whl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-to-pypi:
    name: Publish to PyPI
    if: ${{ !github.event.inputs.is_prerelease }}
    needs: [build, create-release]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/wikipedia-mcp  # Replace with your actual package name
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Publish distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1